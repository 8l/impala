trait Iterator {
    fn inc(self: Self) -> Self;
    fn lt(self: Self, other: Self) -> bool;
}

impl Iterator for int32 {
    fn inc(self: int32) -> int32 { self + 1 }
    fn lt(self: int32, other: int32) -> bool { self < other }
}

fn range[I: Iterator](a: I, b: I, body: fn(I)->()) -> () {
    if (a.lt(b)) {
        body(a);
        range(a.inc(), b, body, return)
    } else {
        return()
    }
}

fn main() -> () {
   range(0, 10, |i| {});
}

