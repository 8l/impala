trait T[A, B] {}
trait U[C, D, E] : T[int, E] {}
impl[F] T[F, bool] for int {}
impl[G] U[f32, G, G] for int {}
fn f[G : T[int, bool]](x:G) -> G {
    x
}
fn main() -> () {
    f[i32](42);
}
