CMAKE_MINIMUM_REQUIRED( VERSION 3.4.3 FATAL_ERROR )

PROJECT ( IMPALA )

SET ( PACKAGE_VERSION "0.3.9" )
SET ( CMAKE_CONFIGURATION_TYPES "Debug;Release" CACHE STRING "limited config" FORCE )
SET ( CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS 1)
SET ( CMAKE_CXX_STANDARD 14)
SET ( CMAKE_CXX_STANDARD_REQUIRED ON)

OPTION ( BUILD_SHARED_LIBS "Build shared libraries" ON )

IF ( NOT CMAKE_BUILD_TYPE )
  SET ( CMAKE_BUILD_TYPE Debug CACHE STRING "Debug or Release" FORCE )
ENDIF ()

SET ( PROJ_ROOT_DIR    ${CMAKE_CURRENT_SOURCE_DIR} )
SET ( PROJ_SOURCE_DIR  ${PROJ_ROOT_DIR}/src )

SET ( PROJ_BINARY_DIR  "bin" )
SET ( PROJ_LIBRARY_DIR "lib" )
SET ( PROJ_INCLUDE_DIR "include" )

SET ( CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${PROJ_BINARY_DIR} )
SET ( CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${PROJ_LIBRARY_DIR} )
SET ( CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${PROJ_LIBRARY_DIR} )

LIST( APPEND CMAKE_MODULE_PATH "${PROJ_ROOT_DIR}" )

INCLUDE_DIRECTORIES ( ${PROJ_SOURCE_DIR} )

FIND_PACKAGE ( THORIN REQUIRED )
INCLUDE_DIRECTORIES ( ${THORIN_INCLUDE_DIRS} )

FIND_PACKAGE ( Half REQUIRED )
IF ( Half_FOUND )
    MESSAGE ( STATUS "Building with Half library from ${Half_INCLUDE_DIRS}." )
    INCLUDE_DIRECTORIES ( ${Half_INCLUDE_DIRS} )
ENDIF ()

IF ( LLVM_FOUND )
    ADD_DEFINITIONS ( ${LLVM_DEFINITIONS} )
    ADD_DEFINITIONS ( "-DLLVM_SUPPORT" )
    INCLUDE_DIRECTORIES ( ${LLVM_INCLUDE_DIRS} )
ENDIF ()

SET ( IMPALA_BINARY "impala" )

ADD_SUBDIRECTORY ( ${PROJ_SOURCE_DIR} )

MESSAGE ( STATUS "Using Debug flags: ${CMAKE_CXX_FLAGS_DEBUG}" )
MESSAGE ( STATUS "Using Release flags: ${CMAKE_CXX_FLAGS_RELEASE}" )
MESSAGE ( STATUS "Build type: ${CMAKE_BUILD_TYPE}" )

CONFIGURE_FILE ( "cmake/impala-config.cmake.in" "share/impala/cmake/impala-config.cmake" @ONLY)
