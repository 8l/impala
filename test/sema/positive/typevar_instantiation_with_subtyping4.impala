trait T[A, B] {}
trait U[C, D, E] : T[int, E] {}
trait V[F, G, H, I, J] : T[F, int], U[G, bool, G] {}
impl[K, L] V[K, L, f32, K, f64] for int {}
fn f[G : T[int, bool]](x:G) -> G {
    x
}
fn main() -> () {
    f[i32](42);
}
