
in_node: new InNode(a_35)
in_node: new InNode(end_scope_30)
run_cfa()
+WL: a_35, op 0 = br_26: fn(bool, fn(), fn())

run_cfa() pop: a_35: fn(mem, qs32, qs32, fn(mem, qs32)) - 0 fn(bool, fn(), fn()) br_26
  cf_nodes(a_35, 0) op is: fn(bool, fn(), fn()) br_26
    marking stable: a_35, op 0
    out_node: new OutNode(a_35, br_26)
    old set: {}
    new set: {a_35-br_26}
    ignoring old_set, first time computing this
      newly found node: a_35-br_26
      > link a_35 -> a_35-br_26
        arg if_then_49 (a_35, 2): fn()
            cf_nodes(a_35, 2) op is: fn() if_then_49
              marking stable: a_35, op 2
              in_node: new InNode(if_then_49)
              old set: {}
              new set: {if_then_49}
              ignoring old_set, first time computing this
                newly found node: if_then_49
          > link a_35-br_26 -> if_then_49
          recompute continuation of if_then_49:
          +WL: if_then_49, op 0 = return_39: fn(mem, qs32)
        arg if_else_50 (a_35, 3): fn()
            cf_nodes(a_35, 3) op is: fn() if_else_50
              marking stable: a_35, op 3
              in_node: new InNode(if_else_50)
              old set: {}
              new set: {if_else_50}
              ignoring old_set, first time computing this
                newly found node: if_else_50
          > link a_35-br_26 -> if_else_50
          recompute continuation of if_else_50:
          +WL: if_else_50, op 0 = br_26: fn(bool, fn(), fn())

run_cfa() pop: if_then_49: fn() - 0 fn(mem, qs32) return_39
  cf_nodes(if_then_49, 0) op is: fn(mem, qs32) return_39
    marking stable: if_then_49, op 0
    out_node: new OutNode(if_then_49, return_39)
    old set: {}
    new set: {if_then_49-return_39}
    ignoring old_set, first time computing this
      newly found node: if_then_49-return_39
      > link if_then_49 -> if_then_49-return_39

run_cfa() pop: if_else_50: fn() - 0 fn(bool, fn(), fn()) br_26
  cf_nodes(if_else_50, 0) op is: fn(bool, fn(), fn()) br_26
    marking stable: if_else_50, op 0
    out_node: new OutNode(if_else_50, br_26)
    old set: {}
    new set: {if_else_50-br_26}
    ignoring old_set, first time computing this
      newly found node: if_else_50-br_26
      > link if_else_50 -> if_else_50-br_26
        arg if_then_54 (if_else_50, 2): fn()
            cf_nodes(if_else_50, 2) op is: fn() if_then_54
              marking stable: if_else_50, op 2
              in_node: new InNode(if_then_54)
              old set: {}
              new set: {if_then_54}
              ignoring old_set, first time computing this
                newly found node: if_then_54
          > link if_else_50-br_26 -> if_then_54
          recompute continuation of if_then_54:
          +WL: if_then_54, op 0 = a_35: fn(mem, qs32, qs32, fn(mem, qs32))
        arg if_else_55 (if_else_50, 3): fn()
            cf_nodes(if_else_50, 3) op is: fn() if_else_55
              marking stable: if_else_50, op 3
              in_node: new InNode(if_else_55)
              old set: {}
              new set: {if_else_55}
              ignoring old_set, first time computing this
                newly found node: if_else_55
          > link if_else_50-br_26 -> if_else_55
          recompute continuation of if_else_55:
          +WL: if_else_55, op 0 = a_35: fn(mem, qs32, qs32, fn(mem, qs32))

run_cfa() pop: if_then_54: fn() - 0 fn(mem, qs32, qs32, fn(mem, qs32)) a_35
  cf_nodes(if_then_54, 0) op is: fn(mem, qs32, qs32, fn(mem, qs32)) a_35
    marking stable: if_then_54, op 0
    old set: {}
    new set: {a_35}
    ignoring old_set, first time computing this
      newly found node: a_35
      > link if_then_54 -> a_35
      +WL: a_35, op 0 = br_26: fn(bool, fn(), fn())

run_cfa() pop: if_else_55: fn() - 0 fn(mem, qs32, qs32, fn(mem, qs32)) a_35
  cf_nodes(if_else_55, 0) op is: fn(mem, qs32, qs32, fn(mem, qs32)) a_35
    marking stable: if_else_55, op 0
    old set: {}
    new set: {a_35}
    ignoring old_set, first time computing this
      newly found node: a_35
      > link if_else_55 -> a_35
      =WL: Not adding to WL, unstable: a_35, op 0

run_cfa() pop: a_35: fn(mem, qs32, qs32, fn(mem, qs32)) - 0 fn(bool, fn(), fn()) br_26
  cf_nodes(a_35, 0) op is: fn(bool, fn(), fn()) br_26
    marking stable: a_35, op 0
    old set: {a_35-br_26}
    new set: {a_35-br_26}
run_cfa: worklist empty, finished
Final links after CFA:
  a_35
    a_35-br_26
      if_then_49
      if_else_50
  if_else_55
    a_35
  if_then_49
    if_then_49-return_39
  if_then_54
    a_35
  if_else_50
    if_else_50-br_26
      if_then_54
      if_else_55
  end_scope_30
build_cfg: adding necessary exit links
> link if_then_49-return_39 -> end_scope_30
scope entry: a_35
cfa entry: end_scope_30