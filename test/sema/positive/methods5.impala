trait T[B] {
    fn f(self: Self, b: B) -> B;
}
fn g[C, D:T[C]](c: C, d: D) -> C {
    d.f(c)
}
fn h[E:T[i32]](e: E) -> i32 {
    g[i32, E](42, e)
}

impl T[i32] for bool {
    fn f(self: bool, b: i32) -> i32 { b }
}
fn i() -> i32 {
    h[bool](true)
}
